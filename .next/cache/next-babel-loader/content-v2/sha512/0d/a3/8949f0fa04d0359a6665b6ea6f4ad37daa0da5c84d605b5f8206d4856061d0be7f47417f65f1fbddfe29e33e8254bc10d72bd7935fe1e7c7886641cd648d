{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/roosvelt/SAVE_IMP1/ICT4D/ICT4D-L2/S2/ICT214/KENNE_NGNINPIA_ROOSVELT_19K2782/rsa-aes/pages/rsa/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport Modalchiffrement from \"../../components/rsa/Modalchiffrement\";\nimport Modaldechiffrer from \"../../components/rsa/Modaldechiffrer\";\nimport dynamic from \"next/dynamic\";\nconst JSEncrypt = dynamic(() => import(\"jsencrypt\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"jsencrypt\")],\n    modules: [\"jsencrypt\"]\n  }\n});\nexport default class RSA extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      messageChiffrer: null,\n      privateKey: null,\n      publicKey: null,\n      isLoading: false,\n      jsEncrypt: null\n    });\n\n    _defineProperty(this, \"getMessage\", msg => {\n      this.setState({\n        messageChiffrer: msg\n      });\n    });\n  }\n\n  componentDidMount() {\n    var crypt = new JSEncrypt();\n    const publicKey = crypt.getPublicKey();\n    this.setState({\n      publicKey: publicKey,\n      jsEncrypt: crypt\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardTocrypt\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"RSA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card text-white  newPrimary\",\n        style: {\n          \"max-width\": \"50rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-header\",\n          children: \"RSA CHIFFREMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body\",\n          children: [this.state.messageChiffrer != null ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              class: \"card-title\",\n              children: [\"Le message est :\", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-success text-wrap\",\n                style: {\n                  width: \"6rem;\"\n                },\n                children: this.state.messageChiffrer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), \"La cle publique est :\", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-success text-wrap\",\n                style: {\n                  width: \"6rem;\"\n                },\n                children: this.state.publicKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              class: \"card-title\",\n              children: \"Pour Chiffrer une clef publique vous sera g\\xE9n\\xE9r\\xE9e pour chaque session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: \"Que voulez-vous faire ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Modalchiffrement, {\n              recup: this.getMessage,\n              jsEncrypt: this.state.jsEncrypt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modaldechiffrer, {\n              jsEncrypt: this.state.jsEncrypt,\n              recup: this.getMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Retour a l'acceuill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/media/roosvelt/SAVE_IMP1/ICT4D/ICT4D-L2/S2/ICT214/KENNE_NGNINPIA_ROOSVELT_19K2782/rsa-aes/pages/rsa/index.js"],"names":["React","Head","Link","Modalchiffrement","Modaldechiffrer","dynamic","JSEncrypt","ssr","RSA","Component","messageChiffrer","privateKey","publicKey","isLoading","jsEncrypt","msg","setState","componentDidMount","crypt","getPublicKey","render","state","width","getMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport Modalchiffrement from \"../../components/rsa/Modalchiffrement\";\nimport Modaldechiffrer from \"../../components/rsa/Modaldechiffrer\";\nimport dynamic from \"next/dynamic\";\n\nconst  JSEncrypt  = dynamic(() => import(\"jsencrypt\"), { ssr: false });\n\nexport default class RSA extends React.Component {\n  state = {\n    messageChiffrer: null,\n    privateKey: null,\n    publicKey: null,\n    isLoading: false,\n    jsEncrypt: null,\n  };\n\n  getMessage = (msg) => {\n    this.setState({ messageChiffrer: msg });\n  };\n\n  componentDidMount() {\n    var crypt = new JSEncrypt();\n    const publicKey = crypt.getPublicKey();\n    this.setState({ publicKey: publicKey, jsEncrypt: crypt });\n  }\n\n  render() {\n    return (\n      <div className=\"cardTocrypt\">\n        <Head>\n          <title>RSA</title>\n        </Head>\n        <div\n          class=\"card text-white  newPrimary\"\n          style={{ \"max-width\": \"50rem\" }}\n        >\n          <div class=\"card-header\">RSA CHIFFREMENT</div>\n          <div class=\"card-body\">\n            {this.state.messageChiffrer != null ? (\n              <React.Fragment>\n                <h4 class=\"card-title\">\n                  Le message est :{\" \"}\n                  <div\n                    className=\"text-success text-wrap\"\n                    style={{ width: \"6rem;\" }}\n                  >\n                    {this.state.messageChiffrer}\n                  </div>\n                  La cle publique est :{\" \"}\n                  <div\n                    className=\"text-success text-wrap\"\n                    style={{ width: \"6rem;\" }}\n                  >\n                    {this.state.publicKey}\n                  </div>\n                </h4>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <h4 class=\"card-title\">\n                  Pour Chiffrer une clef publique vous sera générée pour chaque\n                  session\n                </h4>\n              </React.Fragment>\n            )}\n            <p class=\"card-text\">Que voulez-vous faire ?</p>\n\n            <div>\n              <Modalchiffrement\n                recup={this.getMessage}\n                jsEncrypt={this.state.jsEncrypt}\n              />\n              <Modaldechiffrer\n                jsEncrypt={this.state.jsEncrypt}\n                recup={this.getMessage}\n              />\n            </div>\n            <Link href=\"/\">\n              <a>Retour a l'acceuill</a>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}